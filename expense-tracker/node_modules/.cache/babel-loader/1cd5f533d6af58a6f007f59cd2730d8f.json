{"ast":null,"code":"var _jsxFileName = \"/Users/dquigle2/Documents/Personal Projects/Sandbox/React/Udemy Course/react-complete-guide/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./ExpenseForm.css\"; // store state of button unclicked\n// change state to clicked => show form\n// cancel button => hide form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [showForm, setShowForm] = useState(false); // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '';\n  //     enteredAmount: '';\n  //     enteredDate: '';\n  // })\n\n  const formToggle = () => {\n    setShowForm(!showForm);\n  };\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value); // *** IF you depend on previous state, follow this function form:\n    // setUserInput((prevState) => {\n    //     return {...userInput, enteredTitle: event.target.value};\n    // });\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: formToggle,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: enteredTitle,\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            minimum: \"0.01\",\n            step: \"0.01\",\n            value: enteredAmount,\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            value: enteredDate,\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: formToggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ExpenseForm, \"16f/iCgx8Wd3wUEGu4AbWcicUZc=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/dquigle2/Documents/Personal Projects/Sandbox/React/Udemy Course/react-complete-guide/src/components/NewExpense/ExpenseForm.js"],"names":["useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","showForm","setShowForm","formToggle","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\n// store state of button unclicked\n// change state to clicked => show form\n// cancel button => hide form\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '';\n  //     enteredAmount: '';\n  //     enteredDate: '';\n  // })\n\n  const formToggle = () => {\n    setShowForm(!showForm);\n  };\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // *** IF you depend on previous state, follow this function form:\n    // setUserInput((prevState) => {\n    //     return {...userInput, enteredTitle: event.target.value};\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n  return (\n      <div>\n        <button onClick={formToggle}>Add New Expense</button>\n        {showForm && (\n            <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                <label>Title</label>\n                <input\n                    type=\"text\"\n                    value={enteredTitle}\n                    onChange={titleChangeHandler}\n                />\n                </div>\n                <div className=\"new-expense__control\">\n                <label>Amount</label>\n                <input\n                    type=\"number\"\n                    minimum=\"0.01\"\n                    step=\"0.01\"\n                    value={enteredAmount}\n                    onChange={amountChangeHandler}\n                />\n                </div>\n                <div className=\"new-expense__control\">\n                <label>Date</label>\n                <input\n                    type=\"date\"\n                    min=\"2019-01-01\"\n                    max=\"2022-12-31\"\n                    value={enteredDate}\n                    onChange={dateChangeHandler}\n                />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\" onClick={formToggle}>Cancel</button>\n                <button type=\"submit\">Add Expense</button>\n            </div>\n            </form>\n        )}\n\n      </div>\n  );\n};\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}