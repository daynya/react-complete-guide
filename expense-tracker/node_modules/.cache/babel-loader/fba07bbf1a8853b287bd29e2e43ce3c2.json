{"ast":null,"code":"var _jsxFileName = \"/Users/dquigle2/Documents/Personal Projects/Sandbox/React/Udemy Course/react-complete-guide/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/dquigle2/Documents/Personal Projects/Sandbox/React/Udemy Course/react-complete-guide/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","useState","Expenses","props","filteredYear","setFilteredYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","filterChangeHandler","selectedYear","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;AAEA,QAAMK,gBAAgB,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACvD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CR,YAAjD;AACD,GAFwB,CAAzB;;AAIA,QAAMS,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CT,IAAAA,eAAe,CAACS,YAAD,CAAf;AACD,GAFD;;AAIA,MAAIC,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIT,gBAAgB,CAACU,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BD,IAAAA,eAAe,GAAGT,gBAAgB,CAACW,GAAjB,CAAsBR,OAAD,iBACnC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACS,KAFjB;AAGE,MAAA,MAAM,EAAET,OAAO,CAACU,MAHlB;AAIE,MAAA,IAAI,EAAEV,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACW,EADf;AAAA;AAAA;AAAA;AAAA,YADc,CAAlB;AAQD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEhB,YADZ;AAEE,QAAA,cAAc,EAAES;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGE,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnCD;;GAAMb,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  let expensesContent = <p>No expenses found.</p>;\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ));\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        {expensesContent}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}